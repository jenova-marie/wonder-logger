# OpenAI API Configuration
OPENAI_API_KEY=

# Anthropic Claude API Configuration
ANTHROPIC_API_KEY=

# Server Configuration
PORT=3001
NODE_ENV=development
NODE_TLS_REJECT_UNAUTHORIZED=0

# Logging Configuration
LOG_LEVEL=info
LOG_FILE_ENABLED=true
LOG_FILE_DIR=./logs

# OpenTelemetry Configuration
# Enabled for observability testing
OTEL_SDK_DISABLED=false
OTEL_SERVICE_NAME=recoverysky-zoom-api
OTEL_SERVICE_VERSION=1.0.0
OTEL_TRACE_CORRELATION=true

# Trace Export Configuration
OTEL_TRACE_EXPORTER=otlp
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4318
# Note: Don't set TRACES_ENDPOINT - exporter auto-appends /v1/traces
# OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://localhost:4318/v1/traces
OTEL_EXPORTER_OTLP_HEADERS={}

# Metrics Export Configuration
OTEL_METRIC_EXPORTER=otlp
OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://localhost:4318/v1/metrics
OTEL_METRIC_EXPORT_INTERVAL=60000

# Log Export Configuration
# Route logs through OTEL collector (collector forwards to Loki)
OTEL_LOG_EXPORTER=otlp
OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=http://localhost:4318/v1/logs
OTEL_LOG_EXPORT_INTERVAL=5000
OTEL_LOG_EXPORT_TIMEOUT=30000

# OpenTelemetry Context Propagation
OTEL_PROPAGATORS=tracecontext,baggage,b3

# Prometheus Fallback Configuration (when not using OTLP)
OTEL_PROMETHEUS_PORT=9090
OTEL_PROMETHEUS_ENDPOINT=/metrics
OTEL_PROMETHEUS_HOST=https://prometheus.rso
